<?xml version="1.0" encoding="ISO-8859-1"?>

<persistence xmlns="http://java.sun.com/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd"
             version="1.0">

	<persistence-unit name="kipfPersistence">
		<jta-data-source>java:/kipfDS</jta-data-source>

		<!-- Bug von JBoss: die JAR-Dateien werden in %JBOSS_HOME%\bin gesucht -->
		<jar-file>shopEJB-client.jar</jar-file>

		<properties>
			<!-- Das Default-Schema -->
			<property name="hibernate.default_schema" value="shop"/>
			
			<!-- Keine proprietaeren Erweiterungen von HQL nutzen -->
			<property name="hibernate.query.jpaql_strict_compliance" value="false"/>

			<!-- In der Log-Datei die SQL-Anweisungen lesbarer rausschreiben -->
			<property name="hibernate.format_sql" value="true"/>

			<!-- In der Log-Datei auch Kommentare zu den generierten SQL-Anweisungen hinzufuegen -->
			<property name="hibernate.use_sql_comments" value="true"/>

			<!-- HashtableCache ist einfach, aber fuer Produktion ungeeignet -->
			<property name="hibernate.cache.provider_class" value="org.hibernate.cache.HashtableCacheProvider"/>

			<!-- TreeCache ist clusterfaehig und transaktional: fuer Produktion geeignet -->
			<!-- Voraussetzung fuer TreeCache: Cluster-Installation von JBoss -->
			<!--
			<property name="hibernate.cache.provider_class" value="org.jboss.ejb3.entity.TreeCacheProviderHook"/>
			<property name="hibernate.treecache.mbean.object_name" value="jboss.cache:service=EJB3EntityTreeCache"/>
			-->
			
			<property name="hibernate.cache.use_query_cache" value="true"/>
			
			<!-- Klassen und Collections fuer Caching der persistenten Objekte -->
			<!-- falls TreeCache statt HashtableCache: read-write aendern in transactional -->
	<!-- 		<property name="hibernate.ejb.classcache.de.kipf.shop.personen.db.Benutzer" value="read-write, /benutzer"/>
			<property name="hibernate.ejb.collectioncache.de.kipf.shop.personen.db.Benutzer.benutzergruppen" value="read-write, /benutzergruppen"/>
			<property name="hibernate.ejb.collectioncache.de.kipf.shop.personen.db.Benutzer.auftraege" value="read-write, /auftraege"/>
			<property name="hibernate.ejb.classcache.de.kipf.shop.personen.db.Benutzergruppe" value="read-write, /benutzergruppe"/>
			<property name="hibernate.ejb.collectioncache.de.kipf.shop.personen.db.Benutzergruppe.benutzer" value="read-write, /benutzerliste"/>
			<property name="hibernate.ejb.classcache.de.kipf.shop.vorgaenge.db.Auftrag" value="read-write, /auftrag"/>
			<property name="hibernate.ejb.collectioncache.de.kipf.shop.vorgaenge.db.Auftrag.auftragsstati" value="read-write, /auftragsstati"/>
			<property name="hibernate.ejb.classcache.de.kipf.shop.vorgaenge.db.Auftragsstatus" value="read-write, /auftragsstatus"/>
			<property name="hibernate.ejb.classcache.de.kipf.shop.vorgaenge.db.Auftragsstatustyp" value="read-write, /auftragsstatustyp"/>
			<property name="hibernate.ejb.collectioncache.de.kipf.shop.vorgaenge.db.Auftragsstatustyp.auftragsstati" value="read-write, /auftragsstati2"/>
			
			<property name="hibernate.ejb.classcache.de.kipf.shop.vorgaenge.db.Warenkorb" value="read-write, /warenkoerbe"/>
			<property name="hibernate.ejb.classcache.de.kipf.shop.vorgaenge.db.WarenkorbPosition" value="read-write, /warenkorbpos"/>
			<property name="hibernate.ejb.classcache.de.kipf.shop.teile.db.AngebotsModell" value="read-write, /amodelle"/>
			<property name="hibernate.ejb.classcache.de.kipf.shop.teile.db.Einzelteil" value="read-write, /einzelteile"/>
			<property name="hibernate.ejb.classcache.de.kipf.shop.teile.db.Fahrradtyp" value="read-write, /fahrradtypen"/>
			<property name="hibernate.ejb.classcache.de.kipf.shop.teile.db.KundenModell" value="read-write, /kmodelle"/>
			<property name="hibernate.ejb.classcache.de.kipf.shop.teile.db.Lagerbuchung" value="read-write, /lagerbuchungen"/>
			<property name="hibernate.ejb.classcache.de.kipf.shop.teile.db.Teiltyp" value="read-write, /teiltypen"/>			
			-->
		</properties>
	</persistence-unit>
</persistence>